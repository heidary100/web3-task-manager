version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_DB: tasks
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for job queue
  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    ports:
      - "4000:4000"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/tasks
      JWT_SECRET: supersecret
      REDIS_HOST: redis
      REDIS_PORT: 6379
      PORT: 4000
      FRONTEND_URL: http://localhost:3000
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: sh -c "npx prisma generate && npx prisma migrate deploy && npm run start:dev"

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: always
    ports:
      - "3000:5173"
    environment:
      VITE_API_URL: http://localhost:4000
      NODE_ENV: development
      NODE_OPTIONS: --experimental-global-webcrypto --openssl-legacy-provider
      CHOKIDAR_USEPOLLING: "true"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app:rw
      - /app/node_modules

volumes:
  postgres_data:
  redis_data:
